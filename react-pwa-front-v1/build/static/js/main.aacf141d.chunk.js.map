{"version":3,"sources":["services/querys/__generated__/ListUsersQuery.graphql.js","services/querys/__generated__/getSingleUserByIdQuery.graphql.js","components/Container/Container.jsx","components/Footer/Footer.jsx","fetchGraphQL.js","RelayEnvironment.js","services/querys/ListUsers.js","services/querys/getSingleUserById.js","storage/idb.js","services/UserService.js","components/Row/Row.jsx","components/Grid/Grid.jsx","components/Cards/UserCard.jsx","components/Inputs/CustomInput.jsx","components/Filter/Filter.jsx","views/users/UsersPage.jsx","components/UserProfile/UserProfile.jsx","views/users/ViewUserPage.jsx","layouts/MainLayout.jsx","serviceWorker.js","index.js"],"names":["node","v0","v1","hash","module","exports","v2","v3","v4","v5","v6","props","children","className","text","variables","a","console","log","window","location","hostname","fetch","method","headers","body","JSON","stringify","query","response","json","fetchGraphQL","params","name","Environment","network","Network","create","store","Store","RecordSource","ListUsersQuery","getSingleUserByIdQuery","dbPromise","openDB","upgrade","db","createObjectStore","idbKeyval","get","key","set","val","put","delete","clear","keys","getAllKeys","users","idb","fetchQuery","RelayEnvironment","filter","length","list","id","user","getSingleUserById","_id","localUser","regexValidator","RegExp","toLowerCase","test","additionalClassName","Grid","sm","md","lg","xl","xll","handleClick","onClick","src","picture","alt","age","eyeColor","company","email","value","onChange","type","handleLogoClick","UsersPage","handleFilterChange","event","setState","target","refreshUserContent","state","handleCardClick","bind","this","map","history","push","UserService","getAllFilterByName","then","data","Fragment","Filter","renderCards","Component","withRouter","ViewUserPage","routeId","match","item","filteredFriendsList","friends","MainLayout","storeNetworkStatus","addEventListener","removeEventListener","exact","path","component","isLocalhost","Boolean","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","from","to","document","getElementById","URL","process","href","origin","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aacf141d.chunk.js","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type ListUsersQueryVariables = {|\n  filter?: ?string\n|};\nexport type ListUsersQueryResponse = {|\n  +list: ?$ReadOnlyArray<?{|\n    +_id: ?string,\n    +name: ?string,\n    +company: ?string,\n    +age: ?number,\n    +eyeColor: ?string,\n    +email: ?string,\n    +picture: ?string,\n  |}>\n|};\nexport type ListUsersQuery = {|\n  variables: ListUsersQueryVariables,\n  response: ListUsersQueryResponse,\n|};\n*/\n\n\n/*\nquery ListUsersQuery(\n  $filter: String\n) {\n  list(name: $filter) {\n    _id\n    name\n    company\n    age\n    eyeColor\n    email\n    picture\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"filter\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"filter\"\n      }\n    ],\n    \"concreteType\": \"User\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"list\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"_id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"company\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"age\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"eyeColor\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"email\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"picture\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ListUsersQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ListUsersQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"b730cd957172fb0d01785b8d47448e44\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ListUsersQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ListUsersQuery(\\n  $filter: String\\n) {\\n  list(name: $filter) {\\n    _id\\n    name\\n    company\\n    age\\n    eyeColor\\n    email\\n    picture\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '417bf72098db2a98e0620da8fe28e05f';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type getSingleUserByIdQueryVariables = {|\n  _id?: ?string\n|};\nexport type getSingleUserByIdQueryResponse = {|\n  +user: ?{|\n    +_id: ?string,\n    +name: ?string,\n    +age: ?number,\n    +email: ?string,\n    +picture: ?string,\n    +friends: ?$ReadOnlyArray<?{|\n      +_id: ?string,\n      +name: ?string,\n      +company: ?string,\n      +age: ?number,\n      +eyeColor: ?string,\n      +email: ?string,\n      +picture: ?string,\n    |}>,\n  |}\n|};\nexport type getSingleUserByIdQuery = {|\n  variables: getSingleUserByIdQueryVariables,\n  response: getSingleUserByIdQueryResponse,\n|};\n*/\n\n\n/*\nquery getSingleUserByIdQuery(\n  $_id: ID\n) {\n  user(_id: $_id) {\n    _id\n    name\n    age\n    email\n    picture\n    friends {\n      _id\n      name\n      company\n      age\n      eyeColor\n      email\n      picture\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"_id\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"age\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"picture\",\n  \"storageKey\": null\n},\nv6 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"_id\",\n        \"variableName\": \"_id\"\n      }\n    ],\n    \"concreteType\": \"User\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user\",\n    \"plural\": false,\n    \"selections\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/),\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"friends\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"company\",\n            \"storageKey\": null\n          },\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"eyeColor\",\n            \"storageKey\": null\n          },\n          (v4/*: any*/),\n          (v5/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"getSingleUserByIdQuery\",\n    \"selections\": (v6/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"getSingleUserByIdQuery\",\n    \"selections\": (v6/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"6f4f819e7827182287bf5f8102d357f1\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"getSingleUserByIdQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query getSingleUserByIdQuery(\\n  $_id: ID\\n) {\\n  user(_id: $_id) {\\n    _id\\n    name\\n    age\\n    email\\n    picture\\n    friends {\\n      _id\\n      name\\n      company\\n      age\\n      eyeColor\\n      email\\n      picture\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'e0537768c889033292009f93a130c38f';\n\nmodule.exports = node;\n","import React from 'react';\n\nimport './Container.css'\n\nexport default (props) => {\n    const { children } = props\n    return (\n        <div className='container'>\n            {children}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport './Footer.css';\n\nexport default (props) => {\n    return (\n        <footer className='footer'>\n            <div>Sample Footer for Dialog sample test PWA Application</div>\n        </footer>\n    );\n}\n\n","async function fetchGraphQL(text, variables) {\n    console.log(\"Hostname: \", window.location.hostname);\n    const response = await fetch(`http://${window.location.hostname}:4000/graphql`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            query: text,\n            variables,\n        }),\n    });\n    return await response.json();\n}\n\nexport default fetchGraphQL;","import { Environment, Network, RecordSource, Store } from 'relay-runtime';\nimport fetchGraphQL from './fetchGraphQL';\n\nasync function fetchRelay(params, variables) {\n    console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\n    return fetchGraphQL(params.text, variables);\n}\n\nexport default new Environment({\n    network: Network.create(fetchRelay),\n    store: new Store(new RecordSource()),\n});","\nimport graphql from 'babel-plugin-relay/macro';\n\nconst ListUsersQuery = graphql`\n    query ListUsersQuery ($filter: String){\n        list (name: $filter){\n            _id\n            name\n            company\n            age\n            eyeColor\n            email\n            picture\n        }    \n    }\n    `;\n\nexport default ListUsersQuery;","\nimport graphql from 'babel-plugin-relay/macro';\n\nconst getSingleUserByIdQuery = graphql`\n    query getSingleUserByIdQuery ($_id: ID){\n        user (_id: $_id){\n            _id\n            name\n            age\n            email\n            picture\n            friends {\n                _id\n                name\n                company\n                age\n                eyeColor\n                email\n                picture\n            }\n        }    \n    }\n    `;\n\nexport default getSingleUserByIdQuery;","import { openDB } from 'idb';\n\nconst dbPromise = openDB('dialog-pwa-test', 1, {\n    upgrade(db) {\n        db.createObjectStore('keyval');\n    },\n});\n\nconst idbKeyval = {\n    async get(key) {\n        return (await dbPromise).get('keyval', key);\n    },\n    async set(key, val) {\n        console.log(\"Val\", val);\n        return (await dbPromise).put('keyval', val, key);\n    },\n    async delete(key) {\n        return (await dbPromise).delete('keyval', key);\n    },\n    async clear() {\n        return (await dbPromise).clear('keyval');\n    },\n    async keys() {\n        return (await dbPromise).getAllKeys('keyval');\n    },\n};\n\nexport default idbKeyval;\n","import {\n    fetchQuery\n} from 'relay-runtime';\n\nimport RelayEnvironment from '../RelayEnvironment';\nimport ListUsersQuery from './querys/ListUsers'\nimport getSingleUserById from './querys/getSingleUserById'\n\nimport idb from '../storage/idb';\n\nclass UserService {\n    async getAll() {\n        let users = [];\n        console.log(\"Network Status: \", await idb.get('network-status'));\n        if (await idb.get('network-status')) {\n            users = await fetchQuery(RelayEnvironment, ListUsersQuery, { filter: \"\" });\n            await idb.set('users', users);\n        }\n        if (!users || users.length === 0) {\n            let list = await idb.get('users');\n            users = list ? list : [];\n        }\n        return users;\n    }\n\n    async get(id) {\n        let user = {}\n        if (await idb.get('network-status')) {\n            user = await fetchQuery(RelayEnvironment, getSingleUserById, { _id: id });\n            await idb.set(id, user);\n        }\n        if (!user) {\n            let localUser = await idb.get(id);\n            user = localUser ? localUser : {};\n        }\n        return user;\n    }\n\n    async getAllFilterByName(filter) {\n        let users = [];\n        console.log(\"Network Status: \", await idb.get('network-status'));\n        if (await idb.get('network-status')) {\n            users = await fetchQuery(RelayEnvironment, ListUsersQuery, { filter });\n            await idb.set('users', users);\n        }\n        if (!users || users.length === 0) {\n            let list = await idb.get('users');\n            let regexValidator = new RegExp(`${filter.toLowerCase()}`, 'g');\n            users = list ? list.filter((user) => regexValidator.test(user.name.toLowerCase())) : [];\n        }\n        return users;\n    }\n}\n\nexport default new UserService();","import React from 'react';\n\nimport './Row.css'\n\nexport default (props) => {\n    const { children, additionalClassName } = props\n    return (\n        <div className={`row ${additionalClassName}`}>\n            {children}\n        </div>\n    );\n}\n","import React from 'react';\n\nimport './Grid.css'\n\n\nconst Grid = (props) => {\n    const { sm, md, lg, xl, xll, children } = props;\n    return (\n        <div className={'col '\n            + (sm ? `cols-sm-${sm} ` : '')\n            + (md ? `cols-md-${md} ` : '')\n            + (lg ? `cols-lg-${lg} ` : '')\n            + (xl ? `cols-xl-${xl} ` : '')\n            + (xll ? `cols-xll-${xll} ` : '')\n        }>\n            {children}\n        </div>\n    );\n}\n\nexport default Grid;\n","import React from 'react';\n\nimport './UserCard.css'\n\nexport default (props) => {\n    const { user, handleClick } = props\n    return (\n        <div className='UserCard' onClick={() => handleClick(user._id)}>\n            <img src={user.picture} alt=\"User\" />\n            <p>\n                Name: {user.name} <br />\n                Age: {user.age}<br />\n                EyeColor: {user.eyeColor}<br />\n                Company: {user.company}<br />\n                Email: {user.email}\n            </p>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport './CustomInput.css';\n\nexport default (props) => {\n    const { value, onChange } = props;\n    return (\n        <input\n            className=\"CustomInput\"\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n        />\n    );\n}\n\n","import React from \"react\";\nimport Grid from '../Grid/Grid';\nimport CustomInput from '../Inputs/CustomInput'\nimport Row from '../Row/Row';\n\nexport default (props) => {\n    const { value, onChange, handleLogoClick } = props;\n    return (\n        <Row>\n            <Grid sm='1' md='5' lg='6' xl='6' xll='6'>\n                <h1 onClick={handleLogoClick}> MySocial</h1>\n            </Grid>\n            <Grid sm='1' md='4' lg='4' xl='4' xll='4'>\n                <CustomInput\n                    value={value}\n                    onChange={onChange}\n                />\n            </Grid>\n        </Row>\n    );\n}\n\n","import React, { Component } from 'react';\n\nimport { withRouter } from \"react-router-dom\";\n// import RelayEnvironment from '../../RelayEnvironment';\n\nimport UserService from '../../services/UserService'\n\nimport Row from '../../components/Row/Row';\nimport Grid from '../../components/Grid/Grid';\nimport UserCard from '../../components/Cards/UserCard';\nimport Filter from '../../components/Filter/Filter'\n\nclass UsersPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            filter: \"\"\n        };\n        this.handleCardClick = this.handleCardClick.bind(this);\n        this.handleLogoClick = this.handleLogoClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshUserContent(\"\");\n    }\n\n    renderCards(users) {\n        if (users) {\n            return users.map((user) => {\n                return (\n                    <Grid sm='1' md='1' lg='4' xl='4' xll='4' key={user._id}>\n                        <UserCard user={user} handleClick={this.handleCardClick} />\n                    </Grid>\n                );\n            });\n        }\n        return null\n    }\n\n    handleCardClick(_id) {\n        const { history } = this.props;\n        history.push(`/adm/users/view/${_id}`);\n    }\n\n    handleLogoClick() {\n        const { history } = this.props;\n        history.push(`/adm/users`);\n    }\n\n    handleFilterChange = (event) => {\n        this.setState({ filter: event.target.value });\n        this.refreshUserContent(event.target.value);\n    };\n\n    refreshUserContent(filter) {\n        UserService.getAllFilterByName(filter)\n            .then(data => {\n                console.log(\"Data: \", data);\n                this.setState({ users: data.list });\n            });\n    }\n\n    render() {\n        const { users, filter } = this.state;\n        return (\n            <React.Fragment>\n                <Filter value={filter} onChange={this.handleFilterChange} handleLogoClick={this.handleLogoClick} />\n                <Row>\n                    {this.renderCards(users)}\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default (withRouter)(UsersPage);","import React from \"react\";\nimport Grid from '../Grid/Grid';\nimport Row from '../Row/Row';\n\nimport './UserProfile.css'\n\nexport default (props) => {\n    const { user } = props;\n    return (\n        <Row additionalClassName=\"UserProfile\">\n            <Grid sm='1' md='1' lg='6' xl='6' xll='6'>\n                <img src={user.picture} alt=\"User Profile\" />\n            </Grid>\n            <Grid sm='1' md='1' lg='2' xl='2' xll='2'>\n                <p>\n                    Name: {user.name} <br />\n                    Age: {user.age} <br />\n                    Email: {user.email}\n                </p>\n            </Grid>\n        </Row>\n    );\n}\n\n","import React, { Component } from 'react';\n\nimport { withRouter } from \"react-router-dom\";\n\nimport UserService from '../../services/UserService'\n\nimport Row from '../../components/Row/Row';\nimport Grid from '../../components/Grid/Grid';\nimport UserCard from '../../components/Cards/UserCard';\nimport UserProfile from '../../components/UserProfile/UserProfile'\nimport Filter from '../../components/Filter/Filter'\n\nclass ViewUserPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            users: [],\n            filter: \"\",\n            routeId: props.match.params.id,\n        };\n        this.handleCardClick = this.handleCardClick.bind(this);\n        this.handleLogoClick = this.handleLogoClick.bind(this);\n    }\n\n    componentDidMount() {\n        const { routeId } = this.state;\n        this.refreshUserContent(routeId);\n    }\n\n    renderCards(list) {\n        if (list) {\n            return list.map((item) => {\n                return (\n                    <Grid sm='1' md='1' lg='4' xl='4' xll='4' key={item._id}>\n                        <UserCard user={item} handleClick={this.handleCardClick} />\n                    </Grid>\n                );\n            });\n        }\n        return null;\n    }\n\n    handleCardClick(_id) {\n        console.log(\"handleCardClick\", _id);\n    }\n\n    handleLogoClick() {\n        const { history } = this.props;\n        history.push(`/adm/users`);\n    }\n\n    handleFilterChange = (event) => {\n        this.setState({ filter: event.target.value });\n    };\n\n    refreshUserContent(filter) {\n        UserService.get(filter)\n            .then(data => {\n                console.log(\"ViewUserPage Data: \", data);\n                this.setState({ user: data.user });\n            });\n    }\n\n    filteredFriendsList(list, filter) {\n        let regexValidator = new RegExp(`${filter.toLowerCase()}`, 'g');\n        return list ? list.filter((item) => regexValidator.test(item.name.toLowerCase())) : [];\n    }\n\n    render() {\n        const { filter, user } = this.state;\n        return (\n            <React.Fragment>\n                <Filter value={filter} onChange={this.handleFilterChange} handleLogoClick={this.handleLogoClick} />\n                <UserProfile user={user} />\n                <Row>\n                    <Grid sm='1' md='1' lg='1' xl='1' xll='1'>\n                        <h1> Friends:</h1>\n                    </Grid>\n                    {this.renderCards(this.filteredFriendsList(user.friends, filter))}\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default (withRouter)(ViewUserPage);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Container from '../components/Container/Container';\nimport Footer from '../components/Footer/Footer'\n\nimport UsersPage from '../views/users/UsersPage';\nimport ViewUserPage from '../views/users/ViewUserPage';\n\nimport idb from '../storage/idb';\n\n\nclass MainLayout extends Component {\n    constructor(props) {\n        super(props);\n        idb.set(\"network-status\", 1);\n    }\n    storeNetworkStatus = (event) => {\n        idb.set(\"network-status\", event.type === 'offline' ? 0 : 1);\n    }\n\n    componentDidMount() {\n        window.addEventListener('offline', this.storeNetworkStatus)\n        window.addEventListener('online', this.storeNetworkStatus)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('online', this.storeNetworkStatus)\n        window.removeEventListener('offline', this.storeNetworkStatus)\n    }\n    render() {\n        return (\n            <Container>\n                <Switch>\n                    <Route exact path='/adm/users' component={UsersPage} />\n                    <Route path='/adm/users/view/:id' component={ViewUserPage} />\n                </Switch>\n                <Footer />\n            </Container>\n        );\n    }\n}\n\nMainLayout.propTypes = {\n};\n\nexport default MainLayout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect, } from 'react-router-dom';\nimport './index.css';\nimport MainLayout from './layouts/MainLayout';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <div>\n      <Switch>\n        <Route path=\"/adm\" render={(props) => <MainLayout {...props} />} />\n        <Redirect from=\"*\" to=\"/adm/users\" />\n      </Switch>\n    </div>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}